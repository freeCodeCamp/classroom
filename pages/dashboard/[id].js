import Head from 'next/head';
import Layout from '../../components/layout';
import Link from 'next/link';
import Navbar from '../../components/navbar';
import prisma from '../../prisma/prisma';
import DashTabs from '../../components/dashtabs';
import { getSession } from 'next-auth/react';
import {
  createDashboardObject,
  fetchStudentData,
  getDashedNamesURLs,
  getNonDashedNamesURLs,
  getSuperBlockJsons
} from '../../util/api_proccesor';

export async function getServerSideProps(context) {
  //making sure User is the teacher of this classsroom's dashboard
  const userSession = await getSession(context);
  if (!userSession) {
    context.res.writeHead(302, { Location: '/' });
    context.res.end();
    return {};
  }
  const userEmail = await prisma.User.findMany({
    where: {
      email: userSession['user']['email']
    }
  });

  const classroomTeacherId = await prisma.classroom.findUnique({
    where: {
      classroomId: context.params.id
    },
    select: {
      classroomTeacherId: true
    }
  });

  if (userEmail[0].id !== classroomTeacherId['classroomTeacherId']) {
    context.res.writeHead(302, { Location: '/classes' });
    context.res.end();
    return {};
  }

  const certificationNumbers = await prisma.classroom.findUnique({
    where: {
      classroomId: context.params.id
    },
    select: {
      fccCertifications: true
    }
  });
  let superblockURLS = await getDashedNamesURLs(
    certificationNumbers.fccCertifications
  );
  let nonDashedNames = await getNonDashedNamesURLs(
    certificationNumbers.fccCertifications
  );

  let superBlockJsons = await getSuperBlockJsons(superblockURLS);
  let dashboardObjs = createDashboardObject(superBlockJsons);

  let currStudentData = await fetchStudentData();

  return {
    props: {
      userSession,
      columns: dashboardObjs,
      certificationNames: nonDashedNames,
      data: currStudentData
    }
  };
}

export default function Home({
  userSession,
  columns,
  certificationNames,
  data
}) {
  let tabNames = certificationNames;
  let columnNames = columns;
  let studentData = data;

  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      {userSession && (
        <>
          <Navbar>
            <div className='border-solid border-2 pl-4 pr-4'>
              <Link href={'/classes'}>Classes</Link>
            </div>
            <div className='border-solid border-2 pl-4 pr-4'>
              <Link href={'/'}> Menu</Link>
            </div>
          </Navbar>
          <DashTabs
            columns={columnNames}
            certificationNames={tabNames}
            studentData={studentData}
          ></DashTabs>
        </>
      )}
    </Layout>
  );
}
