import Head from 'next/head';
import Layout from '../../components/layout';
import Link from 'next/link';
import Navbar from '../../components/navbar';
import DashTable from '../../components/dashtable';
import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();

export async function getServerSideProps(context) {
  /* First we ask the database which superblocks we need to get the data from.
     The URL of the page looks like /dashboard/<CLASSROOM_ID> where CLASSROOM ID corresponds with classroomId in our database
     Each classroom object in our database has an array fccCertifications where each number in that array corresponds to a specific superblock
     certificationNumbers is this list which belongs to this specific classroom id
  */

  const certificationNumbers = await prisma.classroom.findUnique({
    where: {
      classroomId: context.params.id
    },
    select: {
      fccCertifications: true
    }
  });

  //base URL of freecodecamp's API
  const base_url = '';

  //url of alll the superblocks
  const superblocksres = await fetch('');
  const superblocksreq = await superblocksres.json();

  //1 in the certification numbers will correspond with the first superblock name we get from freecodeCamp for example
  //we add the name that we get from the availableSuperBlocks to the base url to get the url that will give us the data from a specific superblock

  let urls = [];
  for (let x in certificationNumbers['fccCertifications']) {
    urls.push(base_url + superblocksreq['superblocks'][0][x] + '.json');
  }

  console.log(urls);

  //our previous hardcoded stuff below
  let url = '';

  const res = await fetch(url);
  const req = await res.json();

  const blocks = req['responsive-web-design']['blocks'];
  let sortedBlocks = [];
  for (var block in blocks) {
    sortedBlocks.push([
      { name: block, selector: null },
      blocks[block]['challenges']['order']
    ]);
  }

  //1 refers to the second element in our list
  //https://lage.us/Javascript-Sort-2d-Array-by-Column.html

  sortedBlocks.sort(function (a, b) {
    if (a[1] === b[1]) {
      return 0;
    } else {
      return a[1] < b[1] ? -1 : 1;
    }
  });

  const arrayColumn = (arr, n) => arr.map(x => x[n]);

  return {
    props: { columns: arrayColumn(sortedBlocks, 0) }
  };
}

export default function Home({ columns, certificationCodes }) {
  console.log(certificationCodes);
  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
        <Navbar>
          <Link href={'#'}>Back</Link>
          <Link href={'#'}>Menu</Link>
          <Link href={'#'}>Extra</Link>
        </Navbar>
      </Head>
      <DashTable columns={columns} rows={null}></DashTable>
    </Layout>
  );
}
