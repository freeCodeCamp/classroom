import Head from 'next/head';
import Layout from '../../../../../components/layout';
import Link from 'next/link';
import prisma from '../../../../../prisma/prisma';
import Navbar from '../../../../../components/navbar';
import { getSession } from 'next-auth/react';
import {
  getDashedNamesURLs,
  getSuperBlockJsons,
  createSuperblockDashboardObject,
  getSuperblockTitlesInClassroomByIndex,
  getIndividualStudentData
} from '../../../../../util/api_proccesor';
import React from 'react';
import styles from '../../../../../components/DetailsCSS.module.css';
import DetailsDashboard from '../../../../../components/DetailsDashboard';

export async function getServerSideProps(context) {
  //making sure User is the teacher of this classsroom's dashboard
  const userSession = await getSession(context);

  const studentEmail = context.params.studentEmail;
  if (!userSession) {
    context.res.writeHead(302, { Location: '/' });
    context.res.end();
    return {};
  }

  const userEmail = await prisma.User.findMany({
    where: {
      email: userSession['user']['email']
    }
  });

  const classroomTeacherId = await prisma.classroom.findUnique({
    where: {
      classroomId: context.params.id
    },
    select: {
      classroomTeacherId: true
    }
  });

  const classroomName = await prisma.classroom.findUnique({
    where: {
      classroomId: context.params.id
    },
    select: {
      classroomName: true
    }
  });

  if (
    classroomTeacherId == null ||
    userEmail[0].id == null ||
    userEmail[0].id !== classroomTeacherId['classroomTeacherId']
  ) {
    context.res.writeHead(302, { Location: '/classes' });
    context.res.end();
    return {};
  }

  const certificationNumbers = await prisma.classroom.findUnique({
    where: {
      classroomId: context.params.id
    },
    select: {
      fccCertifications: true
    }
  });

  let superblockTitles = await getSuperblockTitlesInClassroomByIndex(
    certificationNumbers.fccCertifications
  );

  let superblockURLS = await getDashedNamesURLs(
    certificationNumbers.fccCertifications
  );

  let superBlockJsons = await getSuperBlockJsons(superblockURLS); // this is an array of urls
  let superblocksDetailsJSONArray = await createSuperblockDashboardObject(
    superBlockJsons
  );

  let studentData = await getIndividualStudentData(studentEmail);

  return {
    props: {
      userSession,
      studentEmail,
      superblockTitles,
      superblocksDetailsJSONArray,
      studentData,
      classroomName: classroomName.classroomName
    }
  };
}

export default function StudentDetails({
  userSession,
  studentEmail,
  superblocksDetailsJSONArray,
  superblockTitles,
  studentData,
  classroomName
}) {
  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      {userSession && (
        <>
          <Navbar>
            <div className='border-solid border-2 pl-4 pr-4'>
              <Link href={'/classes'}>Classes</Link>
            </div>
            <div className='border-solid border-2 pl-4 pr-4'>
              <Link href={'/'}> Menu</Link>
            </div>
          </Navbar>
          <div className={styles.student_header}>
            <h1>
              {studentEmail}&apos;s progress in {classroomName}
            </h1>
          </div>

          <DetailsDashboard
            superblocksDetailsJSONArray={superblocksDetailsJSONArray}
            superblockTitles={superblockTitles}
            studentData={studentData}
          ></DetailsDashboard>
        </>
      )}
    </Layout>
  );
}
